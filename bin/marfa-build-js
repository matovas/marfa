#!/usr/bin/env ruby
require 'fileutils'
require 'optparse'
require 'babel/transpiler'
require 'closure-compiler'

include FileUtils

options = {
  home_path: FileUtils.pwd,
  search_dir: '',
  output_dir: '/static/js'
}

parser = OptionParser.new do |opts|
  opts.banner = 'Usage: marfa-build-js [options]'

  opts.on('-s', '--search_dir search_dir', 'Search dir') do |search_dir|
    options[:search_dir] = search_dir
  end

  opts.on('-o', '--output_dir output_dir', 'Output dir') do |output_dir|
    options[:output_dir] = output_dir
  end

  opts.on('-h', '--help', 'Displays help') do
    puts opts
    exit
  end
end

parser.parse!

puts 'Starting js transpile'

search_dir = options[:home_path] + options[:search_dir]

cd search_dir, verbose: true

Dir[search_dir + '/**/*.js'].each do |path|
  puts "Processing #{path}"

  closure = Closure::Compiler.new(
    compilation_level: 'SIMPLE_OPTIMIZATIONS',
    language_out: 'ES5_STRICT'
  )

  result = Babel::Transpiler.transform(File.read(path))
  code = closure.compile(result['code'])
  output_path = options[:home_path] + options[:output_dir]

  mkdir_p(output_path) unless Dir.exist?(output_path)

  File.open(output_path + '/' + path.split('/').last, 'w') do |f|
    f.puts code
  end
end

puts 'All js files processed'